#!/usr/bin/env ruby
require 'set'
require 'open3'

class DSL
  attr_reader :groups, :packages

  def initialize
    @groups = Set.new
    @packages = Set.new
  end

  def eval(filename)
    if File.exist?(filename)
      instance_eval(File.read(filename), filename)
    end
  end

  def group(name)
    @groups.add(name)
  end

  def package(name)
    @packages.add(name)
  end
end

def resolve(groups, packages)
  resolved = Set.new(packages)
  unless groups.empty?
    stdout, status = Open3.capture2("pacman -Sg #{groups.to_a.join(' ')}")
    stdout.split("\n").each do |line|
      resolved.add(line.split[-1])
    end
  end
  resolved
end

def expected_packages
  @expected_packages ||=
    begin
      dsl = DSL.new
      dsl.eval(File.expand_path("~/.pacman_packages.rb"))
      resolve(dsl.groups, dsl.packages)
    end
end

def current_packages
  @current_packages ||=
    begin
      currents = Set.new
      stdout, status = Open3.capture2("pacman -Q --explicit")
      stdout.split("\n").each do |line|
        currents.add(line.split[0])
      end
      currents
    end
end

output = false
unless (expected_packages - current_packages).empty?
  puts "# There are some packages expected to be installed"
  (expected_packages - current_packages).to_a.sort.each do |package|
    puts "# #{package}"
  end
  output = true
end

unless (current_packages - expected_packages).empty?
  puts if output
  puts "# There are some packages which are not specified in ~/.pacman_packages.rb"
  (current_packages - expected_packages).to_a.sort.each do |package|
    puts "# package '#{package}'"
  end
end
